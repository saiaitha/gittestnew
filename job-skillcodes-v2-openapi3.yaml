openapi: 3.0.3
info:
  title: " Job Skill Codes API"
  version: "2.0"
  description: This is the Job Skill Codes API

tags:
  - name: JobSkillCodesV2

paths:
  /firm-reference-data-restricted/v2/job_skillcodes:
    get:
      tags:
        - JobSkillCodesV2
      operationId: getJobSkillCodes
      summary: This api provides the mapping for a skill code. It gives the category, sub-category, path, band and sub band tied to a skill code.
      description: |-
        <b>API Description :</b> This api provides the mapping for a skill code. It gives the category, sub-category,
        path, band and sub band tied to a skill code.<br/>
        <b>Business Logic/Filter on data :</b> This api can be used to get skill codes associated to a path, band and sub band.
        It can be used to filter data e.g enter a path, band and sub band and get the mapped skill code in the response.<br/>
        <b>Source overview : </b> API Gateway>Elastic Search>SnowFlake <br/>
        <b>Hypermedia Links :</b>  No<br/>
        <b>Security Level :</b>  Level 2 (Permissioned)<br/>
        <b>Works with ''Try it Out''? :</b> Yes<br/>
        <b>Application Context/User Context/Both:</b> Application Context<br/>
        <b>Caching and frequency :</b> No caching, data refresh frequency is every 30 minutes<br/>
        <b>Any exceptional scenarios associated to API?:</b> The api returns 10 records by default. If you wish to change
        this use the limit query parameter. Also an offset is provided and can be used in combination with limit
        for paginating results. The api accepts the access token/apikey only in the header<br/>
      parameters:
        - name: q
          in: query
          description: |-
            Use the "q" parameter to search for the job skill code details.<br/>
            <b>-</b>For details for the skill codes for a specific job role path id use q=jobRolePathId:1380716<br/>
            <b>-</b>To get only active skill codes use q=activeInactiveFlag:Active.<br/>
            <b>-</b>For multiple fields separate the fields by AND. For Ex: jobRoleCategoryCode:ESP AND jobRoleSubCategoryDesc:Asset Services<br/>
          required: true
          schema:
            type: string
        - name: jobSkillId
          in: query
          description: jobSkillId
          schema:
            type: integer
            format: int64
        - name: jobSkillCode
          in: query
          description: jobSkillCode
          schema:
            type: string
        - name: jobSkillDesc
          in: query
          description: jobSkillDesc
          schema:
            type: string
        - name: activeInactiveFlag
          in: query
          description: activeInactiveFlag
          schema:
            type: string
        - name: internFlag
          in: query
          description: internFlag
          schema:
            type: string
        - name: jobSubImpactBandId
          in: query
          description: jobSubImpactBandId
          schema:
            type: integer
            format: int64
        - name: jobSubImpactBandCode
          in: query
          description: jobSubImpactBandCode
          schema:
            type: string
        - name: jobSubImpactBandDesc
          in: query
          description: jobSubImpactBandDesc
          schema:
            type: string
        - name: jobImpactBandCode
          in: query
          description: jobImpactBandCode
          schema:
            type: string
        - name: jobImpactBandDesc
          in: query
          description: jobImpactBandDesc
          schema:
            type: string
        - name: jobRoleCategoryId
          in: query
          description: jobRoleCategoryId
          schema:
            type: integer
            format: int64
        - name: jobRoleCategoryName
          in: query
          description: jobRoleCategoryName
          schema:
            type: string
        - name: jobRoleCategoryDesc
          in: query
          description: jobRoleCategoryDesc
          schema:
            type: string
        - name: jobRoleCategoryCode
          in: query
          description: jobRoleCategoryCode
          schema:
            type: string
        - name: jobRoleSubCategoryId
          in: query
          description: jobRoleSubCategoryId
          schema:
            type: integer
            format: int64
        - name: jobRoleSubCategoryName
          in: query
          description: jobRoleSubCategoryName
          schema:
            type: string
        - name: jobRoleSubCategoryDesc
          in: query
          description: jobRoleSubCategoryDesc
          schema:
            type: string
        - name: jobRolePathId
          in: query
          description: jobRolePathId
          schema:
            type: integer
            format: int64
        - name: jobRolePathName
          in: query
          description: jobRolePathName
          schema:
            type: string
        - name: jobRolePathDesc
          in: query
          description: jobRolePathDesc
          schema:
            type: string
        - name: impactLevel
          in: query
          description: impactLevel
          schema:
            type: string
        - name: impactLevelDesc
          in: query
          description: impactLevelDesc
          schema:
            type: string
        - name: jobRolePathFamilyId
          in: query
          description: jobRolePathFamilyId
          schema:
            type: integer
            format: int64
        - name: jobRolePathFamilyName
          in: query
          description: jobRolePathFamilyName
          schema:
            type: string
        - name: clientServing
          in: query
          description: clientServing
          schema:
            type: string
        - name: alternateJobTitle1
          in: query
          description: alternateJobTitle1
          schema:
            type: string
        - name: alternateJobTitle2
          in: query
          description: alternateJobTitle2
          schema:
            type: string
        - name: alternateJobTitle3
          in: query
          description: alternateJobTitle3
          schema:
            type: string
        - name: alternateJobTitle4
          in: query
          description: alternateJobTitle4
          schema:
            type: string
        - name: regularTemporary
          in: query
          description: regularTemporary
          schema:
            type: string
        - name: createDate
          in: query
          description: createDate
          schema:
            type: string
        - name: updateDate
          in: query
          description: updateDate
          schema:
            type: string
        - name: offset
          in: query
          description: Indicates start of record. Start of record by default is from 1. Use this in combination with limit for paginating results
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Indicates no of records to be returned. Default is 10. Use this in combination with offset for paginating results
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: |-
            Returns the record in sorted order.
            Allowed value: fieldname asc or fieldname desc
            (where fieldname can be geoLocationCode, geoLocationName, etc.)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: omitNullFields
          in: query
          description: |-
            Use this field to control the null value fields in the response
            set. It accepts 'true' or 'false'. The default is set to 'true'. true indcates
            that the response set will not contain the fields that have null value and
            false indicates the response will contain the fields that have the null
            values
          schema:
            type: string
        - name: fields
          in: query
          description: |-
            Use this to determine the fields returned in the response. Separate the required fields with a comma.
            Ex: fields=jobSkillCode,jobRolePathName.
            If not passed, all the available fields will be returned'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobSkillCodesV2Response'
          description: Success
        404:
          description: Resource not found
        406:
          description: Input data is in invalid format
        500:
          description: Internal Server Error

components:
  schemas:
    GetJobSkillCodesV2Response:
      description: Response Model
      type: object
      properties:
        response:
          $ref: '#/components/schemas/GetJobSkillCodesV2Payload'
    GetJobSkillCodesV2Payload:
      description: Returns job skillcodes data.
      type: object
      properties:
        correlationID:
          description: The correlation Id associated with this data response
          type: string
        status:
          $ref: '#/components/schemas/Status'
        noOfRecords:
          description: Total Number of Records
          type: integer
          format: int64
        apiVersion:
          description: Api version
          type: string
        params:
          $ref: '#/components/schemas/Parameters'
        jobSkillCodes:
          type: array
          items:
            $ref: '#/components/schemas/JobSkillCodeV2'
    Status:
      description: The overall status of this response
      type: object
      properties:
        httpStatusCode:
          description: The http status code associated with this response
          type: integer
          format: int32
        message:
          description: The http status message associated with this response
          type: string
        error:
          $ref: '#/components/schemas/Error'

    Error:
      description: optional query parameters
      type: object
      properties:
        subCode:
          description: The API error code corresponding to this error
          type: integer
          format: int32
        message:
          description: The API error message corresponding to this error
          type: string
        reason:
          description: The reason for this API error
          type: string

    Parameters:
      description: optional query parameters
      type: object
      properties:
        q:
          type: string
          description: |-
            Use the "q" parameter to search for the job skill code details.<br/>
            <b>-</b>For details for the skill codes for a specific job role path id use q=jobRolePathId:1380716<br/>
            <b>-</b>To get only active skill codes use q=activeInactiveFlag:Active.<br/>
            <b>-</b>For multiple fields separate the fields by AND. For Ex: jobRoleCategoryCode:ESP AND jobRoleSubCategoryDesc:Asset Services<br/>
        omitNullFields:
          type: string
          description: Omit Null Fields
        offset:
          type: integer
          format: int32
          description: Indicates start of record. Start of record by default is from 1. Use this in combination with limit for paginating results
        limit:
          type: integer
          format: int32
          description: Indicates no of records to be returned. Default is 10. Use this in combination with offset for paginating results
        fields:
          type: string
          description: |-
            Use this to determine the fields returned in the response. Separate the required fields with a comma.
            Ex: fields=jobSkillCode,jobRolePathName.
            If not passed, all the available fields will be returned'
        sort:
          description: |-
            Returns the record in sorted order.
            Allowed value: fieldname asc or fieldname desc
            (where fieldname can be countryId, countryCode, etc.)
          type: string

    JobSkillCodeV2:
      description: List of Job Skill code Details
      type: object
      properties:
        jobSkillId:
          type: integer
          format: int64
        jobSkillCode:
          type: string
        jobSkillDesc:
          type: string
        activeInactiveFlag:
          type: string
        internFlag:
          type: string
        jobSubImpactBandId:
          type: integer
          format: int64
        jobSubImpactBandCode:
          type: string
        jobSubImpactBandDesc:
          type: string
        jobImpactBandCode:
          type: string
        jobImpactBandDesc:
          type: string
        jobRoleCategoryId:
          description: Unique identifier to identify a job role category record
          type: integer
          format: int64
        jobRoleCategoryName:
          description: Defines the degree of client orientation of a role (direct,
            indirect or little to none); Roll up of the Job Role Sub Category
          type: string
        jobRoleCategoryDesc:
          description: Provides the description of the job role category
          type: string
        jobRoleCategoryCode:
          description: Provides the code of the job role category
          type: string
        jobRoleSubCategoryId:
          description: Unique identifier to identify the job role sub category record
          type: integer
          format: int64
        jobRoleSubCategoryName:
          description: Indicates the job role sub category name that serves to cluster
            and manage the various paths at the Firm
          type: string
        jobRoleSubCategoryDesc:
          description: Provides the description of job role sub category name
          type: string
        jobRolePathId:
          description: Unique identifier to identify the job role path record
          type: integer
          format: int64
        jobRolePathName:
          description: Provides the list of type of work a Firm member in a certain
            role performs; Roll up of Skill Code
          type: string
        jobRolePathDesc:
          description: Provides the description of type of work a Firm member in a
            certain role performs,Roll up of Skill Code
          type: string
        impactLevel:
          type: string
        impactLevelDesc:
          type: string
        jobRolePathFamilyId:
          type: integer
          format: int64
        jobRolePathFamilyName:
          type: string
        alternateJobTitle1:
          type: string
        alternateJobTitle2:
          type: string
        alternateJobTitle3:
          type: string
        alternateJobTitle4:
          type: string
        regularTemporary:
          type: string
        clientServing:
          type: string
        createDate:
          type: string
        updateDate:
          type: string
