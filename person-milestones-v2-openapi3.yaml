openapi: 3.0.3
info:
  title: "Person Milestones API"
  version: "2.0"
  description: This is the Person Milestones API


tags:
  - name: PersonMilestonesV2


paths:
  /person_milestones:
    get:
      tags:
        - PersonMilestonesV2
      operationId: getPersonMilestones
      summary: The API returns Person Milestones
      description: |-
        <b>API Description:</b> This API provides a history of career achievements and personal changes for Firm employees.<br/>
        <b>Business Logic/Filter on data:</b> Full history data available. For the specific set of fields, please use the fields parameter with an asterix or the specific field names. All of the fields in the response are indexed and can be used to filter results<br/>
        <b>Source overview: </b> API Gateway>ES>SnowFlake <br/>
        <b>Hypermedia Links:</b> No<br/>
        <b>Security Level:</b> Level 2 (Permissioned)<br/>
        <b>Works with "Try it Out"?:</b> Yes<br/>
        <b>Application Context/User Context/Both:</b> Application Context<br/>
        <b>Data refresh frequency :</b>Database refresh frequency is every 2 hours starting 01:00 AM EST<br/>
        <b>Caching enabled and time to live:</b> None<br/>
        <b>Any exceptional scenarios associated to API?:</b> The api accepts the access token/apikey only in the header.
        The total no of records displayed are 10 with start record at 1. If you wish to change this, utilize the limit
        and the offset params.<br/>
      parameters:
        - name: q
          in: query
          description: Use the 'q' parameter to do a full text search on Person Milestones API.<br/>
          required: true
          schema:
            type: string
        - name: fmno
          in: query
          description: The unique identifier for a person, whether internal or external worker.
          schema:
            type: string
        - name: category
          in: query
          description: The Block to which milestone belong.
          schema:
            type: string
        - name: sort
          in: query
          description: |-
            Returns the record in sorted order.
            Allowed value: fieldname asc or fieldname desc
            (where fieldname can be geoLocationCode, geoLocationName, etc.)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: attribute
          in: query
          description: The kind of milestone
          schema:
            type: string
        - name: value
          in: query
          description: An indicator showing a level of attainment, progress, or status in an area
          schema:
            type: string
        - name: currentRecord
          in: query
          description: A flag showing whether the row is the most recent milestone
            in the Data Hub
          schema:
            type: string
        - name: startDate
          in: query
          description: The first day the Firm member reached the milestone
          schema:
            type: string
        - name: endDate
          in: query
          description: The date on which a Firm Member reached a new milestone
          schema:
            type: string
        - name: updateDate
          in: query
          description: Audit column which identifies the date when the person milestone was last updated in the Data Hub
          schema:
            type: string
        - name: offset
          in: query
          description: |-
            Indicates start of record. Start of record by default is from 1.
            Use this in combination with limit for paginating results
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: |-
            Indicates no of records to be returned. Default is 10.
            Use this in combination with offset for paginating results
          schema:
            type: integer
            format: int32
        - name: fields
          in: query
          required: true
          description: |-
            Use this to determine the fields returned in the response. Separate the required fields with a comma.
            Ex: fields=category,attribute.
            If not passed, all the available fields will be returned
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: omitNullFields
          in: query
          description: Use this field to control the null value fields in the response set. It accepts 'true' or 'false'. The default is set to 'true'. true indcates that the response set will not contain the fields that have null value and false indicates the response will contain the fields that have the null values
          schema:
            type: string
        - name: dateRange
          in: query
          description: |-
            Returns the records defined in the dateRange.
            Example 1: dateRange createdDate "2022-06-08T17:58:34Z" now
            Example 2: dateRange createdDate "2022-06-08T17:58:34Z" "2022-12-08T17:58:34Z"
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        400:
          description: Bad Request being made.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        401:
          description: Unauthorized Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        406:
          description: Input data is in invalid format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
    post:
      tags:
        - PersonsMilestonesV2ApiPOST
      operationId: getPersonMilestonesPostV2
      summary: The API returns Person Milestones
      description: |-
        <b>API Description:</b> This API provides a history of career achievements and personal changes for Firm employees.<br/>
        <b>Business Logic/Filter on data:</b> Full history data available. For the specific set of fields, please use the fields parameter with an asterix or the specific field names. All of the fields in the response are indexed and can be used to filter results<br/>
        <b>Source overview: </b> API Gateway>ES>SnowFlake <br/>
        <b>Hypermedia Links:</b> No<br/>
        <b>Security Level:</b> Level 2 (Permissioned)<br/>
        <b>Works with "Try it Out"?:</b> Yes<br/>
        <b>Application Context/User Context/Both:</b> Application Context<br/>
        <b>Data refresh frequency :</b>Database refresh frequency is every 2 hours starting 01:00 AM EST<br/>
        <b>Caching enabled and time to live:</b> None<br/>
        <b>Any exceptional scenarios associated to API?:</b> The api accepts the access token/apikey only in the header.
        The total no of records displayed are 10 with start record at 1. If you wish to change this, utilize the limit
        and the offset params.<br/>
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonRequestBodyPO'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        400:
          description: Bad Request being made.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        401:
          description: Unauthorized Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        406:
          description: Input data is in invalid format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonMilestonesResponse'

components:
  schemas:
    GetPersonMilestonesResponse:
      description: Response Model
      type: object
      properties:
        response:
          $ref: '#/components/schemas/GetPersonMilestonesPayload'

    GetPersonMilestonesPayload:
      description: Returns person milestones data.
      type: object
      properties:
        correlationID:
          description: The correlation Id associated with this data response
          type: string
        status:
          $ref: '#/components/schemas/Status'
        noOfRecords:
          description: Total Number of Records
          type: integer
          format: int64
        apiVersion:
          description: API version
          type: string
        params:
          $ref: '#/components/schemas/Parameters'
        person_milestones:
          type: array
          items:
            $ref: '#/components/schemas/PersonMilestone'

    Status:
      description: The overall status of this response
      type: object
      properties:
        httpStatusCode:
          description: The http status code associated with this response
          type: integer
          format: int32
        message:
          description: The http status message associated with this response
          type: string
        error:
          $ref: '#/components/schemas/Error'
    Error:
      description: optional query parameters
      type: object
      properties:
        subCode:
          description: The API error code corresponding to this error
          type: integer
          format: int32
        message:
          description: The API error message corresponding to this error
          type: string
        reason:
          description: The reason for this API error
          type: string
    Parameters:
      description: optional query parameters
      type: object
      properties:
        q:
          description: q param
          type: string
        omitNullFields:
          description: Omit Null Fields
          type: string
        offset:
          description: Indicates start of record. Start of record by default is from 1. Use this in combination with limit for paginating results
          type: integer
          format: int32
        limit:
          description: Indicates no of records to be returned. Default is 10. Use this in combination with offset for paginating results
          type: integer
          format: int32
        fields:
          description: |-
            Use this to determine the fields returned in the response. Separate the required fields with a comma.
            Ex: fmno,firstName.
            If not passed, all the available fields will be returned
          type: string

    PersonMilestone:
      description: person milestones data
      type: object
      properties:
        fmno:
          description: fmno
          type: string
        firstName:
          description: First Name
          type: string
        lastName:
          description: Last Name
          type: string
        category:
          description: category
          type: string
        attribute:
          description: attribute
          type: string
        value:
          description: value
          type: string
        currentRecord:
          description: currentRecord
          type: string
        startDate:
          description: startDate
          type: string
        endDate:
          description: endDate
          type: string
        updateDate:
          description: updateDate
          type: string
        lastUpdateDate:
          description: lastUpdateDate
          type: string

    CommonRequestBodyPO:
      required:
        - q
      type: object
      description: Request body need to be send with POST request
      properties:
        q:
          type: string
          description:  The query string need to pass for request filters. If not sure, please send this object as '*'.
        omitNullFields:
          type: boolean
          description:  If you want fields with Null values to be present in response. Default value is TRUE.
        offset:
          type: integer
          description: Indicates start of record. Start of record by default is from 1. Use this in combination with limit for paginating results
          format: int32
        limit:
          type: integer
          description: Indicates no of records to be returned. Default is 10. Use this in combination with offset for paginating results
          format: int32
        fields:
          type: array
          description: |-
            Use this to determine the fields returned in the response. Send the required fields as a LIST.
            Ex: ["core.fmno","contact.emails.emailAddress"]
            If not passed, BAD request error code would be returned by API
          items:
            type: string
        sort:
          type: object
          description: |-
            Returns the record in sorted order.
            Allowed value: fieldname asc or fieldname desc sent in key, value pair where key is fieldname and value is required sorting order i.e. 'asc' or 'desc'
            (where fieldname can be core.fmno, core.firstName, etc.)
          additionalProperties:
            type: string
        dateRange:
          type: string
          description: |-
            Returns the records available per supplied date range.
            Allowed value: fieldname startDate endDate. DateTime should be in yyyy-mm-ddThh:mm:ssZ format.
            Ex: "hr.hireDate 2015-02-21T09:42:12Z 2023-02-21T10:36:08Z"
            (where fieldname can be any date type field)
        filters:
          type: object
          description: |-
            Returns the records per different filters send in the request
            Allowed value: Different filters sent in key, value pair where key is fieldname and value is the filter condition.
            Ex: "core.jobImpactBandCode": "5"
            (where fieldname can be core.fmno, core.firstName, etc.)
          additionalProperties:
            type: string

